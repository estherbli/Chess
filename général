import pygame
import pieces
import dictionnaire_pieces

#Echiquier est une variable globale


class general() :
    def __init__(self):
        pygame.init()
        self.largeur_echiquier=560 #multiple de 8, mis ici pour pouvoir le changer facilement à loisir
        
        self.echiquier=pygame.image.load('C:\\Users\\emili\\OneDrive\\Documents\\CPES-2\\informatique\\chess\\echequier2.png')
        self.echiquier=pygame.transform.scale(self.echiquier, (self.largeur_echiquier,self.largeur_echiquier)) #on redimensionne l'image
        self.tour_des_blancs=True
        
        self.main_surface=pygame.display.set_mode((900,self.largeur_echiquier)) # 900 -> largeur de la fenêtre
        pygame.display.set_caption('Chess') #titre de la fenêtre
        
        #on charge l'echiquier ici pour n'avoir à le faire qu'une seule fois (opération plutôt lourde)

        self.setup_board()
        self.setup_pieces()
        self.__main__()
    
    def setup_board(self):
        self.main_surface.fill((200, 200, 200))
        self.main_surface.blit(self.echiquier, (0,0))


    def ecrire(self, message, position, taille_ecriture=20, taille=(20,100), ecriture="Spectral"):
        #rectangle gris en haut à droite
        #rect = pygame.Rect(position, taille) # premier tuple=position, deuxième la taille

        #image = pygame.Surface(taille)  # Surface(size: tuple) est une class, Surface pygame object for representing images
        #image.fill((200,200,200))  # rectangle gris en haut à droite pour écrire

        #self.main_surface.blit(image, rect)

        #texte
        # pick a font you have and set its size
        myfont = pygame.font.SysFont(ecriture, taille_ecriture)
        # apply it to text on a label
        label = myfont.render(message, 1, (0,0,0))
        # put the label object on the screen at point x=570, y=2
        self.main_surface.blit(label, position)

        pygame.display.flip() #met à jour l'écran


    def setup_pieces(self):

        for i in range(8):
            for j in range(8):

                if (i,j) in dictionnaire_pieces.Echiquier :

                    piece=dictionnaire_pieces.Echiquier[(i,j)]
                    image_piece=piece.image

                    self.main_surface.blit(image_piece, (i*70,j*70)) 

        pygame.display.flip() #met à jour l'écran

    
    def __main__(self):
        clock = pygame.time.Clock()
        running = True
        case=()
        memoire=[]

        while running:
            #bouton abandonner
            couleur_bouton1 = (100,100,100) 
            couleur_bouton2 = (210,200,80)
            mouse = pygame.mouse.get_pos() 

            if self.largeur_echiquier+20 <= mouse[0] <= self.largeur_echiquier+120 and 60 <= mouse[1] <= 120 : 
                pygame.draw.rect(self.main_surface,couleur_bouton1,[self.largeur_echiquier+20,60,100,60]) 
                pygame.display.flip()
          
            else: 
                pygame.draw.rect(self.main_surface,couleur_bouton2,[self.largeur_echiquier+20,60,100,60])
                pygame.display.flip() 

            

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
                    #Permet de garder la fenêtre ouverte jusqu'à ce que l'utilisateur veuille la fermer
                    #Par défaut l'evennement QUIT correspond à cliquer sur la croix
                
                if event.type == pygame.MOUSEBUTTONDOWN:
                    # Set the x, y postions of the mouse click 
                    x, y = mouse

                    if x<=560 and y<=560: #ie si on clique sur l'échiquier
                        i=x//70 #correspnd à la colonne
                        j=y//70 #correspond à la ligne

                        if (i,j) == case:
                            case=()
                            memoire=[]
                        else :
                            case=(i,j)
                            memoire+=[case]

                        if len(memoire)==1:
                            self.ecrire("where do you want to move?",(570,300) )

                        if len(memoire)==2:
                            position_depart=memoire[0][0],memoire[0][1]
                            position_arrivee=case[0],case[1]

                            if position_depart in dictionnaire_pieces.Echiquier:
                                dictionnaire_pieces.Echiquier[position_arrivee]=dictionnaire_pieces.Echiquier.pop(position_depart)
                                self.setup_board()
                                self.setup_pieces()
    
                            #self.main_surface.blit(piece1.image, (70*position_arrivee[0],70*position_arrivee[1]))
                            
                            pygame.display.flip()

                    if self.largeur_echiquier+20 <= x <= self.largeur_echiquier+120 and 60 <= y <= 120 : 

                        self.ecrire("les blancs ont déclaré forfait", (570, 200))
                        self.main_surface.fill((200, 200, 200))
                        self.ecrire("Les noirs ont gagné !", (50,250))


                        pygame.time.delay(3000) #pause for a given number of milliseconds based on the CPU clock 
                        running=False


                
                                                    
                    pygame.display.flip() 
                    
        clock.tick(200)
        #détermine le nombre de fois que cette boucle est exécutée par seconde
        pygame.quit()
        


b=general()

