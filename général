import pygame
import pieces
import dictionnaire_pieces

#Echiquier est une variable globale


class general() :
    def __init__(self):
        self.largeur_echiquier=560 #multiple de 8, mis ici pour pouvoir le changer facilement à loisir
        
        self.echiquier=pygame.image.load('C:\\Users\\emili\\OneDrive\\Documents\\CPES-2\\informatique\\chess\\echequier2.png')
        self.echiquier=pygame.transform.scale(self.echiquier, (self.largeur_echiquier,self.largeur_echiquier)) #on redimensionne l'image
        self.tour_des_blancs=True
        
        self.main_surface=pygame.display.set_mode((900,self.largeur_echiquier)) # 900 -> largeur de la fenêtre
        
        #on charge l'echiquier ici pour n'avoir à le faire qu'une seule fois (opération plutôt lourde)

        self.setup_board()
        self.setup_pieces()
        self.__main__()
    
    def setup_board(self):
        
        pygame.init()

        self.main_surface.fill((200, 200, 200))
        pygame.display.set_caption('Chess') #titre de la fenêtre
        
        self.main_surface.blit(self.echiquier, (0,0))


    def ecrire(message,position):
        
        #rectangle gris en haut à droite
        rect = pygame.Rect((LARGEUR, 0), (20, 900-LONGUEUR)) # premier tuple=position, deuxième la taille

        image = pygame.Surface((900-LONGUEUR, 27))  # The tuple represent size.
        image.fill((200,200,200))  # rectangle gris en heut à droite pour écrire

        self.main_surface.blit(image, rect)

        #texte
        # pick a font you have and set its size
        myfont = pygame.font.SysFont("Spectral", 40)
        # apply it to text on a label
        label = myfont.render("WELCOME PLAYER", 1, (0,0,0))
        # put the label object on the screen at point x=570, y=2
        self.main_surface.blit(label, (570,2))

        pygame.display.flip() #met à jour l'écran


    def setup_pieces(self):

        for i in range(8):
            for j in range(8):

                if (i,j) in dictionnaire_pieces.Echiquier :

                    piece=dictionnaire_pieces.Echiquier[(i,j)]
                    image_piece=piece.image

                    self.main_surface.blit(image_piece, (i*70,j*70)) 

        pygame.display.flip() #met à jour l'écran

    
    def __main__(self):
        clock = pygame.time.Clock()
        running = True
        case=()
        memoire=[]

        while running:

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
                    #Permet de garder la fenêtre ouverte jusqu'à ce que l'utilisateur veuille la fermer
                    #Par défaut l'evennement QUIT correspond à cliquer sur la croix
                
                if event.type == pygame.MOUSEBUTTONDOWN:
                    # Set the x, y postions of the mouse click 
                    x, y = pygame.mouse.get_pos()
                    i=x//70 #correspnd à la collonne
                    j=y//70 #correspond à la ligne

                    if (i,j) == case:
                        case=()
                        memoire=[]
                    else :
                        case=(i,j)
                        memoire+=[case]

                    if len(memoire)==1:
                        myfont2 = pygame.font.SysFont("Spectral", 25)
                        message = myfont2.render("where do you want to move", 1, (0,0,0))
                        self.main_surface.blit(message, (570,50))

                    if len(memoire)==2:
                        position_depart=memoire[0][0],memoire[0][1]
                        position_arrivee=case[0],case[1]

                        if position_depart in dictionnaire_pieces.Echiquier:
                            dictionnaire_pieces.Echiquier[position_arrivee]=dictionnaire_pieces.Echiquier.pop(position_depart)
                            self.setup_board()
                            self.setup_pieces()
                        
                        #self.main_surface.blit(piece1.image, (70*position_arrivee[0],70*position_arrivee[1]))
                        
                        pygame.display.flip()                      
                                                    
                    pygame.display.flip() 
                    
        clock.tick(200)
        #détermine le nombre de fois que cette boucle est exécutée par seconde
        pygame.quit()
        


b=general()
